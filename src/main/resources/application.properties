spring.datasource.url=jdbc:postgresql://localhost:5433/polyathlon
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.generate-ddl=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#spring.security.oauth2.client.registration.my-client.client-id=516170551848-ato34jnc075p4jggj5038m7pakftpftq.apps.googleusercontent.com
#spring.security.oauth2.client.registration.my-client.client-secret=_iEE2uyeIGNY1S19H3DSgWCO
#spring.security.oauth2.client.registration.my-client.scope=openid,email,profile

#spring.security.oauth2.client.provider.my-oauth-provider.token-uri=https://www.googleapis.com/oauth2/v4/token
#spring.security.oauth2.client.provider.my-oauth-provider.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
#spring.security.oauth2.client.provider.my-oauth-provider.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

security.oauth2.client.clientId=516170551848-ato34jnc075p4jggj5038m7pakftpftq.apps.googleusercontent.com
security.oauth2.client.clientSecret=${clientSecret}
security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v4/token
security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/v2/auth
security.oauth2.client.scope=openid,email,profile
security.oauth2.resource.userInfoUri=https://www.googleapis.com/oauth2/v3/userinfo
security.oauth2.client.clientAuthenticationScheme=form
security.oauth2.resource.preferTokenInfo=true

server.port=8080

spring.session.jdbc.initialize-schema=always
spring.session.jdbc.table-name=SPRING_SESSION
spring.session.jdbc.schema=classpath:session_tables.sql
